{
    "openapi": "3.0.0",
    "info": {
        "title": "Ayma website API",
        "description": "This API is designed to work with the backend of the site through AJAX requests from the frontend part of the application.",
        "contact": {
            "email": "mkuchirov@gmail.com"
        },
        "license": {
            "name": "API License",
            "url": "URL-to-your-api-license"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Retrieve a list of posts",
                "operationId": "b3afc0dedfeaeacb8e78b6f8c858e059",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "title": {
                                                "description": "Title of the post",
                                                "type": "string"
                                            },
                                            "link": {
                                                "description": "URL link to the post",
                                                "type": "string"
                                            },
                                            "pubDate": {
                                                "properties": {
                                                    "date": {
                                                        "description": "Publication date of the post",
                                                        "type": "string"
                                                    },
                                                    "timezone_type": {
                                                        "description": "Type of the timezone",
                                                        "type": "integer"
                                                    },
                                                    "timezone": {
                                                        "description": "Timezone of the publication date",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content, no posts found"
                    }
                }
            }
        },
        "/api/faqs": {
            "get": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Get the list of FAQs",
                "description": "Retrieves a list of FAQs.",
                "operationId": "getFaqs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Faq"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/form": {
            "post": {
                "tags": [
                    "Forms"
                ],
                "summary": "Submit a new application",
                "description": "Allows users to submit a new application with their contact details and comments.",
                "operationId": "submitApplication",
                "requestBody": {
                    "description": "User application data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "name",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Type of the application",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Full name of the user",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Contact phone number",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "telegram": {
                                        "description": "Telegram username",
                                        "type": "string"
                                    },
                                    "comment": {
                                        "description": "Additional comments",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application submitted successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get list of languages",
                "operationId": "ba7d9cb5e91615e001d914b1c754e52a",
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Language"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/translations/{locale}": {
            "get": {
                "tags": [
                    "Localisation"
                ],
                "summary": "Retrieves translations for the specified locale",
                "description": "Returns translations in JSON format. If no locale is specified, the default locale is used.",
                "operationId": "getTranslations",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code (for example 'en' or 'ru')",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Locale not found"
                    }
                }
            }
        },
        "/api/menus": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Get the list of menu items",
                "description": "Retrieves a list of menu items with optional nested children.",
                "operationId": "getMenuItems",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MenuItem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/partners": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get the list of partners",
                "description": "Retrieves a list of partners.",
                "operationId": "getPartners",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Partner"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get the list of services",
                "description": "Retrieves a list of services including related service items and descriptions.",
                "operationId": "getServices",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Services not found"
                    }
                }
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Get the list of settings",
                "description": "Retrieves a list of settings.",
                "operationId": "getSettings",
                "parameters": [
                    {
                        "name": "as-hash",
                        "in": "query",
                        "description": "When set, the settings are returned as a hash map of key-value pairs.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Setting"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/work-cases": {
            "get": {
                "tags": [
                    "WorkCase"
                ],
                "summary": "Get the list of work cases",
                "description": "Retrieves a list of work cases.",
                "operationId": "getWorkCases",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkCase"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "FaqDescription": {
                "required": [
                    "question",
                    "answer"
                ],
                "properties": {
                    "question": {
                        "description": "The question of the FAQ",
                        "type": "string"
                    },
                    "answer": {
                        "description": "The answer to the FAQ question",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Faq": {
                "required": [
                    "id",
                    "description"
                ],
                "properties": {
                    "id": {
                        "description": "The FAQ identifier",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "$ref": "#/components/schemas/FaqDescription"
                    }
                },
                "type": "object"
            },
            "Language": {
                "title": "Language",
                "description": "Language entity",
                "properties": {
                    "lang_code": {
                        "description": "Language code",
                        "type": "string"
                    },
                    "locale": {
                        "description": "Language locale",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the language",
                        "type": "string"
                    },
                    "is_default": {
                        "description": "Indicates if this language is the default language",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "MenuItem": {
                "title": "Menu item",
                "description": "A single menu item with optional nested children.",
                "properties": {
                    "link": {
                        "description": "The URL link for the menu item.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the menu item.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Nested children of the menu item.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItem"
                        }
                    }
                },
                "type": "object"
            },
            "Partner": {
                "title": "Partner",
                "description": "The partner model representation.",
                "properties": {
                    "file_url": {
                        "description": "The URL to the partner's file.",
                        "type": "string",
                        "format": "uri"
                    },
                    "link": {
                        "description": "The URL to the partner's website.",
                        "type": "string",
                        "format": "uri"
                    },
                    "location": {
                        "description": "The location where the partner's information is displayed, either 'top' or 'bottom'.",
                        "type": "string",
                        "enum": [
                            "top",
                            "bottom"
                        ]
                    },
                    "name": {
                        "description": "The name of the partner.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Service": {
                "title": "Service",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the Service",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "properties": {
                            "name": {
                                "description": "Name of the Service Description",
                                "type": "string"
                            },
                            "description": {
                                "description": "Detailed description of the Service",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "service_items": {
                        "description": "List of related service items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceItem"
                        }
                    }
                },
                "type": "object"
            },
            "ServiceItem": {
                "title": "Service Item",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the Service Item",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the Service Item",
                        "type": "string"
                    },
                    "description": {
                        "properties": {
                            "name": {
                                "description": "Name of the Service Item Description",
                                "type": "string"
                            },
                            "description": {
                                "description": "Detailed description of the Service Item",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Setting": {
                "title": "Setting",
                "description": "Setting model representation.",
                "properties": {
                    "key": {
                        "description": "The setting key.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The setting value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WorkCase": {
                "title": "Work Case",
                "description": "Case model representation.",
                "properties": {
                    "file_url": {
                        "description": "The URL to the case's file.",
                        "type": "string",
                        "format": "uri"
                    },
                    "link": {
                        "description": "The URL to the case's website.",
                        "type": "string",
                        "format": "uri"
                    },
                    "name": {
                        "description": "The name of the case.",
                        "type": "string"
                    },
                    "description": {
                        "description": "Full description of the case.",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Blog",
            "description": "Everything related to blog"
        },
        {
            "name": "FAQs",
            "description": "Everything related to FAQs"
        },
        {
            "name": "Forms",
            "description": "Everything related to website forms"
        },
        {
            "name": "Languages",
            "description": "Everything related to languages"
        },
        {
            "name": "Menu",
            "description": "Everything related to menus"
        },
        {
            "name": "Partners",
            "description": "Everything related to partners"
        },
        {
            "name": "Services",
            "description": "Everything related to services"
        },
        {
            "name": "Partners",
            "description": "Everything related to partners"
        },
        {
            "name": "Partners",
            "description": "Everything related to partners"
        }
    ]
}